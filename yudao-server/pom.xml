<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>cn.iocoder.boot</groupId>
        <artifactId>yudao</artifactId>
        <version>${revision}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>yudao-server</artifactId>
    <packaging>jar</packaging>

    <name>${project.artifactId}</name>
    <description>
        后端 Server 的主项目，通过引入需要 yudao-module-xxx 的依赖，
        从而实现提供 RESTful API 给 yudao-ui-admin、yudao-ui-user 等前端项目。
        本质上来说，它就是个空壳（容器）！
    </description>
    <dependencies>
        <dependency>
            <groupId>cn.iocoder.boot</groupId>
            <artifactId>yudao-module-system-biz</artifactId>
            <version>${revision}</version>
        </dependency>
        <dependency>
            <groupId>cn.iocoder.boot</groupId>
            <artifactId>yudao-module-infra-biz</artifactId>
            <version>${revision}</version>
        </dependency>
        <dependency>
            <groupId>cn.iocoder.boot</groupId>
            <artifactId>yudao-module-bpm-biz</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- 会员中心。默认注释，保证编译速度 -->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-member-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->

        <!-- 数据报表。默认注释，保证编译速度 -->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-report-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->
        <!-- 工作流。默认注释，保证编译速度 -->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-bpm-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->
        <!-- 支付服务。默认注释，保证编译速度 -->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-pay-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->

        <!-- 微信公众号模块。默认注释，保证编译速度 -->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-mp-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->

        <!-- 商城相关模块。默认注释，保证编译速度-->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-promotion-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-product-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-trade-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-statistics-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->

        <!-- CRM 相关模块。默认注释，保证编译速度 -->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-crm-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->

        <!-- ERP 相关模块。默认注释，保证编译速度 -->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-erp-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->

        <!-- AI 大模型相关模块。默认注释，保证编译速度 -->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-ai-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->

        <!-- IoT 物联网相关模块。默认注释，保证编译速度 -->
        <!--        <dependency>-->
        <!--            <groupId>cn.iocoder.boot</groupId>-->
        <!--            <artifactId>yudao-module-iot-biz</artifactId>-->
        <!--            <version>${revision}</version>-->
        <!--        </dependency>-->

        <!-- spring boot 配置所需依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- 服务保障相关 -->
        <dependency>
            <groupId>cn.iocoder.boot</groupId>
            <artifactId>yudao-spring-boot-starter-protection</artifactId>
        </dependency>

    </dependencies>

<build>
  <finalName>${project.artifactId}</finalName>
    <plugins>
        <!-- 打JAR包，不包含依赖文件；显式剔除配置文件 -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
                <!-- 剔除配置文件 -->
                <excludes>
                    <exclude>*.properties</exclude>
                    <exclude>*.yml</exclude>
                    <exclude>*.xml</exclude>
                    <exclude>*.txt</exclude>
                </excludes>
                <archive>
                    <manifest>
                        <addClasspath>true</addClasspath>
                        <!-- MANIFEST.MF 中 Class-Path 各个依赖加入前缀 -->
                        <!--lib文件夹内容，需要 maven-dependency-plugin插件补充-->
                        <classpathPrefix>lib/</classpathPrefix>
                        <!-- jar包不包含唯一版本标识 -->
                        <useUniqueVersions>false</useUniqueVersions>
                        <!--指定入口类 -->
                        <!--<mainClass>com.lemon.TurbineApplication</mainClass>-->
                    </manifest>
                    <manifestEntries>
                        <!--MANIFEST.MF 中 Class-Path 加入自定义路径，多个路径用空格隔开 -->
                        <!--此处resources文件夹的内容，需要maven-resources-plugin插件补充上-->
                        <Class-Path>./resources/</Class-Path>
                    </manifestEntries>
                </archive>
                <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
        </plugin>

        <!-- 复制依赖的jar包到指定的文件夹里 -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
                <execution>
                    <id>copy-dependencies</id>
                    <phase>package</phase>
                    <goals>
                        <goal>copy-dependencies</goal>
                    </goals>
                    <configuration>
                        <includeScope>runtime</includeScope>
                        <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        <!-- 用于复制指定的文件 -->
        <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
                <!-- 复制配置文件 -->
                <execution>
                    <id>copy-resources</id>
                    <phase>package</phase>
                    <goals>
                        <goal>copy-resources</goal>
                    </goals>
                    <configuration>
                        <resources>
                            <resource>
                                <directory>src/main/resources</directory>
                                <includes>
                                    <exclude>*.properties</exclude>
                                    <exclude>*.yml</exclude>
                                    <exclude>*.xml</exclude>
                                    <exclude>*.txt</exclude>
                                </includes>
                            </resource>
                        </resources>
                        <outputDirectory>${project.build.directory}/resources/</outputDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        <!-- spring-boot-maven-plugin可以不使用，可当做一般jar包来运行 -->
        <!-- spring-boot-maven-plugin可统一包内文件结构-->
        <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
                <classifier>Lemon</classifier>
                <!--重写包含依赖，包含不存在的依赖，jar里没有pom里的依赖 -->
                <includes>
                    <include>
                        <groupId>null</groupId>
                        <artifactId>null</artifactId>
                    </include>
                </includes>
                <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
            <executions>
                <execution>
                    <goals>
                        <goal>repackage</goal>
                    </goals>
                    <configuration>
                        <!--配置jar包特殊标识 配置后，保留原文件，生成新文件 *-run.jar -->
                        <!--配置jar包特殊标识 不配置，原文件命名为 *.jar.original，生成新文件 *.jar -->
                        <!--<classifier>run</classifier> -->
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <!-- 跳过单元测试 -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
                <skipTests>true</skipTests>
            </configuration>
        </plugin>
    </plugins>
</build>

</project>
